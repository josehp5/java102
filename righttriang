public class righttriangle implements Shape {
    private final Point corner;
    private final double base;
    private final double height;

    public righttriangle(Point corner, double base, double height) {
        this.corner = corner;
        this.base = base;
        this.height = height;
    }
    @Override
    public double area() {
        return 0.5 * base * height;
    }
    @Override
    public double perimeter() {
        double hypotenuse = Math.sqrt(base * base + height * height);
        return base + height + hypotenuse;
    }
    @Override
    public boolean isinside(Point p) {
        return false; 
    }

    @Override
    public boolean ison(Point p) {
        return false; 
    }
    @Override
    public Shape translate(double x, double y) {
        return new righttriangle(corner.translate(x, y), base, height);
    }
    @Override
    public Shape scale(double k) {
        return new righttriangle(corner, base * k, height * k);
    }
    @Override
    public String toString() {
        return "righttriangle{" +
                "corner=" + corner +
                ", base=" + base +
                ", height=" + height +
                '}';
    }
    public static boolean similar(righttriangle triangle1, righttriangle triangle2) {
        double ratio1 = triangle1.base / triangle2.base;
        double ratio2 = triangle1.height / triangle2.height;
        return Math.abs(ratio1 - ratio2)
    }
}
